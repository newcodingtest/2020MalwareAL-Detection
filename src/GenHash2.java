import java.io.*;

public class GenHash2 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		//int numOfHash = 10;
		//int numOfHash = 100;
		
		//int numOfHash = 10000;
		//int numOfHash = 20000;
		//int numOfHash = 30000;
		//int numOfHash = 40000;
		//int numOfHash = 50000;
		
		//int numOfHash = 24000;
		int numOfHash = 12000;
		
		int hashSize = 128;
		//int hashSize = 2;
		
		//int fold = 1;
		//int fold = 2;
		//int fold = 3;
		//int fold = 4;
		//int fold = 5;
		
		SimHash[] sh = new SimHash[numOfHash];
			
		try
		{
			//for (int fold=3; fold<=5; fold++) {
			for (int fold=1; fold<=1; fold++) {
				
				System.out.println(fold);
			
			// Read similarity hashes
			FileInputStream fis = new FileInputStream("Train_12000_"+fold+".txt");
			//FileInputStream fis = new FileInputStream("Malicious_test.txt");
			//FileInputStream fis = new FileInputStream("Normal_test.txt");
			DataInputStream dis = new DataInputStream(fis);
			
			//FileOutputStream fos = new FileOutputStream("SimHash_10.txt");
			//FileOutputStream fos = new FileOutputStream("SimHash_24000_"+fold+".txt");
			FileOutputStream fos = new FileOutputStream("SimHash_12000_"+fold+".txt");
			//FileOutputStream fos = new FileOutputStream("Malicious_SimHash_"+Integer.toString(numOfHash)+".txt");
			//FileOutputStream fos = new FileOutputStream("Normal_SimHash_"+Integer.toString(numOfHash)+".txt");
			DataOutputStream dos = new DataOutputStream(fos);
			
			//for (int i=0; i<24000; i++)
			for (int i=0; i<12000; i++)
			{
				String str = dis.readUTF();
				System.out.println(i+":"+str);
				
				for (int j=0; j<64; j++) 
				{
					int a = Integer.parseInt(str.substring(j+6, j+7), 16);
					//System.out.println(j+":"+a+":"+(a/4)+":"+(a%4));
					
					dos.writeInt(a/4);
					dos.writeInt(a%4);
				}
			}
			
			
			//FileInputStream fis = new FileInputStream("train.txt");
			//fis = new FileInputStream("Malicious_test_"+fold+".txt");
			fis = new FileInputStream("Mal_9000_"+fold+".txt");
			//FileInputStream fis = new FileInputStream("Normal_test.txt");
			dis = new DataInputStream(fis);
			
			//FileOutputStream fos = new FileOutputStream("SimHash_10.txt");
			//FileOutputStream fos = new FileOutputStream("SimHash_"+Integer.toString(numOfHash)+".txt");
			//fos = new FileOutputStream("Malicious_SimHash_3000_"+fold+".txt");
			fos = new FileOutputStream("Malicious_SimHash_9000_"+fold+".txt");
			//FileOutputStream fos = new FileOutputStream("Normal_SimHash_"+Integer.toString(numOfHash)+".txt");
			dos = new DataOutputStream(fos);
			
			//for (int i=0; i<3000; i++)
			for (int i=0; i<9000; i++)
			{
				String str = dis.readUTF();
				System.out.println(i+":"+str);
				
				for (int j=0; j<64; j++)
				{
					int a = Integer.parseInt(str.substring(j+6, j+7), 16);
					//System.out.println(j+":"+a+":"+(a/4)+":"+(a%4));
					
					dos.writeInt(a/4);
					dos.writeInt(a%4);
				}
			}
			
			
			//FileInputStream fis = new FileInputStream("train.txt");
			//FileInputStream fis = new FileInputStream("Malicious_test.txt");
			//fis = new FileInputStream("Normal_test_"+fold+".txt");
			fis = new FileInputStream("Nor_9000_"+fold+".txt");
			dis = new DataInputStream(fis);
			
			//FileOutputStream fos = new FileOutputStream("SimHash_10.txt");
			//FileOutputStream fos = new FileOutputStream("SimHash_"+Integer.toString(numOfHash)+".txt");
			//FileOutputStream fos = new FileOutputStream("Malicious_SimHash_"+Integer.toString(numOfHash)+".txt");
			//fos = new FileOutputStream("Normal_SimHash_3000_"+fold+".txt");
			fos = new FileOutputStream("Normal_SimHash_9000_"+fold+".txt");
			dos = new DataOutputStream(fos);
			
			//for (int i=0; i<3000; i++)
			for (int i=0; i<9000; i++)
			{
				String str = dis.readUTF();
				System.out.println(i+":"+str);
				
				for (int j=0; j<64; j++)
				{
					int a = Integer.parseInt(str.substring(j+6, j+7), 16);
					//System.out.println(j+":"+a+":"+(a/4)+":"+(a%4));
					
					dos.writeInt(a/4);
					dos.writeInt(a%4);
				}
			}
			
			} // for k
			
		}
		catch(Exception e)
		{
			
		}
		
	}

}
